{
	"id": "1190cb9df6955c96b2b5e61bff511992",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ownable.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./Initializable.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n\r\n    function __Ownable_init() internal initializer {\r\n        __Context_init_unchained();\r\n        __Ownable_init_unchained();\r\n    }\r\n\r\n    function __Ownable_init_unchained() internal initializer {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    uint256[49] private __gap;\r\n}\r\n"
			},
			"contracts/Initializable.sol": {
				"content": "pragma solidity >=0.4.24 <0.7.0;\r\n\r\n\r\n/**\r\n * @title Initializable\r\n *\r\n * @dev Helper contract to support initializer functions. To use it, replace\r\n * the constructor with a function that has the `initializer` modifier.\r\n * WARNING: Unlike constructors, initializer functions must be manually\r\n * invoked. This applies both to deploying an Initializable contract, as well\r\n * as extending an Initializable contract via inheritance.\r\n * WARNING: When used with inheritance, manual care must be taken to not invoke\r\n * a parent initializer twice, or ensure that all initializers are idempotent,\r\n * because this is not dealt with automatically as with constructors.\r\n */\r\ncontract Initializable {\r\n\r\n  /**\r\n   * @dev Indicates that the contract has been initialized.\r\n   */\r\n  bool private initialized;\r\n\r\n  /**\r\n   * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n  bool private initializing;\r\n\r\n  /**\r\n   * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n  modifier initializer() {\r\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\r\n\r\n    bool isTopLevelCall = !initializing;\r\n    if (isTopLevelCall) {\r\n      initializing = true;\r\n      initialized = true;\r\n    }\r\n\r\n    _;\r\n\r\n    if (isTopLevelCall) {\r\n      initializing = false;\r\n    }\r\n  }\r\n\r\n  /// @dev Returns true if and only if the function is running in the constructor\r\n  function isConstructor() private view returns (bool) {\r\n    // extcodesize checks the size of the code stored in an address, and\r\n    // address returns the current address. Since the code is still not\r\n    // deployed when running a constructor, any checks on its code size will\r\n    // yield zero, making it an effective way to detect if a contract is\r\n    // under construction or not.\r\n    address self = address(this);\r\n    uint256 cs;\r\n    assembly { cs := extcodesize(self) }\r\n    return cs == 0;\r\n  }\r\n\r\n  // Reserved storage space to allow for layout changes in the future.\r\n  uint256[50] private ______gap;\r\n}"
			},
			"contracts/Context.sol": {
				"content": "pragma solidity ^0.6.0;\r\nimport \"./Initializable.sol\";\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract ContextUpgradeSafe is Initializable {\r\n    // Empty internal constructor, to prevent people from mistakenly deploying\r\n    // an instance of this contract, which should be used via inheritance.\r\n\r\n    function __Context_init() internal initializer {\r\n        __Context_init_unchained();\r\n    }\r\n\r\n    function __Context_init_unchained() internal initializer {\r\n\r\n\r\n    }\r\n\r\n\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n\r\n    uint256[50] private __gap;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Context.sol": {
				"ContextUpgradeSafe": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Context.sol\":568:1341  contract ContextUpgradeSafe is Initializable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Context.sol\":568:1341  contract ContextUpgradeSafe is Initializable {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Context.sol\":568:1341  contract ContextUpgradeSafe is Initializable {\r... */\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220b42540979a7fe9313c4cbe01f184eaff9a8326c4ec42aeb12872b1ec02bb455164736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b42540979a7fe9313c4cbe01f184eaff9a8326c4ec42aeb12872b1ec02bb455164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x25 BLOCKHASH SWAP8 SWAP11 PUSH32 0xE9313C4CBE01F184EAFF9A8326C4EC42AEB12872B1EC02BB455164736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "568:773:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;568:773:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b42540979a7fe9313c4cbe01f184eaff9a8326c4ec42aeb12872b1ec02bb455164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x25 BLOCKHASH SWAP8 SWAP11 PUSH32 0xE9313C4CBE01F184EAFF9A8326C4EC42AEB12872B1EC02BB455164736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "568:773:0:-:0;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"__Context_init()": "infinite",
								"__Context_init_unchained()": "infinite",
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 568,
									"end": 1341,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b42540979a7fe9313c4cbe01f184eaff9a8326c4ec42aeb12872b1ec02bb455164736f6c63430006060033",
									".code": [
										{
											"begin": 568,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 568,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 568,
											"end": 1341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"ContextUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xea42d2e25ad51ffa0cd6ed950818aa8144f1260d2491ca5139a1e07469af65a3\",\"urls\":[\"bzz-raw://6b77019544065ff2f4ed46a94ea3decdc6101e526c2f7f2f03f3a20eda60edcb\",\"dweb:/ipfs/QmThtEStRy6TqTRkJiU2hyTLxHs5y1SCuRSXs3tkrpkYxw\"]},\"contracts/Initializable.sol\":{\"keccak256\":\"0x62188c77f79483af23e66038f5dce8496001dbd63017dc2c41d8a9bb801133f0\",\"urls\":[\"bzz-raw://8fba6162c8efb1f9361b5274809d5440191e9800e9aea5e1cb43ef0f9d14d8c1\",\"dweb:/ipfs/Qmb8d192osS5hwkxTZEZcTmhGJxPbHFa8EZxVJxAsjWkEN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 49,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 51,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 116,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "contracts/Context.sol:ContextUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"methods": {},
						"title": "Initializable "
					},
					"evm": {
						"assembly": "    /* \"contracts/Initializable.sol\":672:2075  contract Initializable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Initializable.sol\":672:2075  contract Initializable {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Initializable.sol\":672:2075  contract Initializable {\r... */\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa26469706673582212207685a45efcb594f9e8104e03edf297339c4023d4b88428ca0fd5fadba8a77d0364736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207685a45efcb594f9e8104e03edf297339c4023d4b88428ca0fd5fadba8a77d0364736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x85A45EFCB594F9E8104E03EDF297339C4023D4B88428CA 0xF 0xD5 STATICCALL 0xDB 0xA8 0xA7 PUSH30 0x364736F6C63430006060033000000000000000000000000000000000000 ",
							"sourceMap": "672:1403:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;672:1403:1;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207685a45efcb594f9e8104e03edf297339c4023d4b88428ca0fd5fadba8a77d0364736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x85A45EFCB594F9E8104E03EDF297339C4023D4B88428CA 0xF 0xD5 STATICCALL 0xDB 0xA8 0xA7 PUSH30 0x364736F6C63430006060033000000000000000000000000000000000000 ",
							"sourceMap": "672:1403:1:-:0;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 2075,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207685a45efcb594f9e8104e03edf297339c4023d4b88428ca0fd5fadba8a77d0364736f6c63430006060033",
									".code": [
										{
											"begin": 672,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 672,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 2075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"Initializable \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Initializable.sol\":{\"keccak256\":\"0x62188c77f79483af23e66038f5dce8496001dbd63017dc2c41d8a9bb801133f0\",\"urls\":[\"bzz-raw://8fba6162c8efb1f9361b5274809d5440191e9800e9aea5e1cb43ef0f9d14d8c1\",\"dweb:/ipfs/Qmb8d192osS5hwkxTZEZcTmhGJxPbHFa8EZxVJxAsjWkEN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 49,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 51,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 116,
								"contract": "contracts/Initializable.sol:Initializable",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Ownable.sol": {
				"OwnableUpgradeSafe": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/Ownable.sol\":592:2528  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Ownable.sol\":592:2528  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ownable.sol\":592:2528  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/Ownable.sol\":592:2528  contract OwnableUpgradeSafe is Initializable, ContextUpgradeSafe {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Ownable.sol\":1944:2092  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/Ownable.sol\":1302:1381  function owner() public view returns (address) {\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":2247:2491  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_5:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_11:\n        /* \"contracts/Ownable.sol\":2247:2491  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/Ownable.sol\":1944:2092  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_7:\n        /* \"contracts/Ownable.sol\":1524:1536  _msgSender() */\n      tag_14\n        /* \"contracts/Ownable.sol\":1524:1534  _msgSender */\n      tag_15\n        /* \"contracts/Ownable.sol\":1524:1536  _msgSender() */\n      jump\t// in\n    tag_14:\n        /* \"contracts/Ownable.sol\":1514:1536  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1514:1520  _owner */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1514:1536  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1506:1573  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/Ownable.sol\":2051:2052  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2014:2054  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2035:2041  _owner */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2014:2054  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2082:2083  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2065:2071  _owner */\n      0x65\n      0x00\n        /* \"contracts/Ownable.sol\":2065:2084  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":1944:2092  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1302:1381  function owner() public view returns (address) {\r... */\n    tag_9:\n        /* \"contracts/Ownable.sol\":1340:1347  address */\n      0x00\n        /* \"contracts/Ownable.sol\":1367:1373  _owner */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1360:1373  return _owner */\n      swap1\n      pop\n        /* \"contracts/Ownable.sol\":1302:1381  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2247:2491  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_12:\n        /* \"contracts/Ownable.sol\":1524:1536  _msgSender() */\n      tag_20\n        /* \"contracts/Ownable.sol\":1524:1534  _msgSender */\n      tag_15\n        /* \"contracts/Ownable.sol\":1524:1536  _msgSender() */\n      jump\t// in\n    tag_20:\n        /* \"contracts/Ownable.sol\":1514:1536  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1514:1520  _owner */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":1514:1536  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1506:1573  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/Ownable.sol\":2356:2357  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":2336:2358  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2336:2344  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2336:2358  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Ownable.sol\":2328:2401  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/Ownable.sol\":2446:2454  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2417:2455  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2438:2444  _owner */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2417:2455  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ownable.sol\":2475:2483  newOwner */\n      dup1\n        /* \"contracts/Ownable.sol\":2466:2472  _owner */\n      0x65\n      0x00\n        /* \"contracts/Ownable.sol\":2466:2483  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2247:2491  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Context.sol\":957:1063  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_15:\n        /* \"contracts/Context.sol\":1010:1025  address payable */\n      0x00\n        /* \"contracts/Context.sol\":1045:1055  msg.sender */\n      caller\n        /* \"contracts/Context.sol\":1038:1055  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Context.sol\":957:1063  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa26469706673582212201760562309994ed917a2d21e4aaadad386a017a5e68e27fd0b0cc11aa0ffbdb164736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610507806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461009a575b600080fd5b61004e6100de565b005b610058610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc600480360360208110156100b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610293565b005b6100e66104a3565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61029b6104a3565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806104ac6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212201760562309994ed917a2d21e4aaadad386a017a5e68e27fd0b0cc11aa0ffbdb164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x507 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x4A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220176056230999 0x4E 0xD9 OR LOG2 0xD2 0x1E 0x4A 0xAA 0xDA 0xD3 DUP7 LOG0 OR 0xA5 0xE6 DUP15 0x27 REVERT SIGNEXTEND 0xC 0xC1 BYTE LOG0 SELFDESTRUCT 0xBD 0xB1 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "592:1936:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;592:1936:2;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461009a575b600080fd5b61004e6100de565b005b610058610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100dc600480360360208110156100b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610293565b005b6100e66104a3565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61029b6104a3565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806104ac6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212201760562309994ed917a2d21e4aaadad386a017a5e68e27fd0b0cc11aa0ffbdb164736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x293 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x4A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x4A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4AC PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x65 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x65 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220176056230999 0x4E 0xD9 OR LOG2 0xD2 0x1E 0x4A 0xAA 0xDA 0xD3 DUP7 LOG0 OR 0xA5 0xE6 DUP15 0x27 REVERT SIGNEXTEND 0xC 0xC1 BYTE LOG0 SELFDESTRUCT 0xBD 0xB1 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "592:1936:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;592:1936:2;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1944:148:2;;;:::i;:::-;;1302:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2247:244;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2247:244:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;1944:148;1524:12;:10;:12::i;:::-;1514:22;;:6;;;;;;;;;;;:22;;;1506:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2051:1:::1;2014:40;;2035:6;;;;;;;;;;;2014:40;;;;;;;;;;;;2082:1;2065:6;;:19;;;;;;;;;;;;;;;;;;1944:148::o:0;1302:79::-;1340:7;1367:6;;;;;;;;;;;1360:13;;1302:79;:::o;2247:244::-;1524:12;:10;:12::i;:::-;1514:22;;:6;;;;;;;;;;;:22;;;1506:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:1:::1;2336:22;;:8;:22;;;;2328:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:8;2417:38;;2438:6;;;;;;;;;;;2417:38;;;;;;;;;;;;2475:8;2466:6;;:17;;;;;;;;;;;;;;;;;;2247:244:::0;:::o;957:106:0:-;1010:15;1045:10;1038:17;;957:106;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "257400",
								"executionCost": "300",
								"totalCost": "257700"
							},
							"external": {
								"owner()": "1061",
								"renounceOwnership()": "24275",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"__Ownable_init()": "infinite",
								"__Ownable_init_unchained()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 592,
									"end": 2528,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201760562309994ed917a2d21e4aaadad386a017a5e68e27fd0b0cc11aa0ffbdb164736f6c63430006060033",
									".code": [
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1524,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2054,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 2092,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1367,
											"end": 1373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1506,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2358,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH data",
											"source": 2,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2328,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2455,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2483,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2472,
											"name": "PUSH",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2466,
											"end": 2472,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2491,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 957,
											"end": 1063,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 957,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1055,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 1063,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"OwnableUpgradeSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xea42d2e25ad51ffa0cd6ed950818aa8144f1260d2491ca5139a1e07469af65a3\",\"urls\":[\"bzz-raw://6b77019544065ff2f4ed46a94ea3decdc6101e526c2f7f2f03f3a20eda60edcb\",\"dweb:/ipfs/QmThtEStRy6TqTRkJiU2hyTLxHs5y1SCuRSXs3tkrpkYxw\"]},\"contracts/Initializable.sol\":{\"keccak256\":\"0x62188c77f79483af23e66038f5dce8496001dbd63017dc2c41d8a9bb801133f0\",\"urls\":[\"bzz-raw://8fba6162c8efb1f9361b5274809d5440191e9800e9aea5e1cb43ef0f9d14d8c1\",\"dweb:/ipfs/Qmb8d192osS5hwkxTZEZcTmhGJxPbHFa8EZxVJxAsjWkEN\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x5355dd549c496865f18357e6171e7c028dd5b9efd5d01ebf57d65997e54d509b\",\"urls\":[\"bzz-raw://5a82c67f784e3fc2feeb419ab7409a7018ec3bbb47d33000cbf392ac4174dac7\",\"dweb:/ipfs/QmTnqFSguVUu9DFhTR9VtS7E9961E2WEm2u5YZLfuNuEX2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 49,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 51,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 116,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "______gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 43,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 128,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 246,
								"contract": "contracts/Ownable.sol:OwnableUpgradeSafe",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"ContextUpgradeSafe": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "contracts/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 118,
							"src": "25:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "599:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$117",
											"typeString": "contract Initializable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "599:13:0"
								}
							],
							"contractDependencies": [
								117
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								117
							],
							"name": "ContextUpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "825:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 9,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "836:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "836:26:0"
											}
										]
									},
									"documentation": null,
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 7,
											"modifierName": {
												"argumentTypes": null,
												"id": 6,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "813:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "813:11:0"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:0"
									},
									"scope": 44,
									"src": "778:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "935:12:0",
										"statements": []
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 16,
											"modifierName": {
												"argumentTypes": null,
												"id": 15,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "923:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "923:11:0"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:0"
									},
									"scope": 44,
									"src": "878:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1027:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1045:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1045:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 23,
												"id": 26,
												"nodeType": "Return",
												"src": "1038:17:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "976:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "1010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1009:17:0"
									},
									"scope": 44,
									"src": "957:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1136:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "1147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
														"typeString": "contract ContextUpgradeSafe"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1147:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 35,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1288:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1288:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 32,
												"id": 37,
												"nodeType": "Return",
												"src": "1281:15:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "1122:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 30,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1122:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:14:0"
									},
									"scope": 44,
									"src": "1071:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 44,
									"src": "1312:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1312:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 42,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1320:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1312:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 45,
							"src": "568:773:0"
						}
					],
					"src": "0:1343:0"
				},
				"id": 0
			},
			"contracts/Initializable.sol": {
				"ast": {
					"absolutePath": "contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							117
						]
					},
					"id": 118,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "38:632:1",
								"text": "@title Initializable\n\n * @dev Helper contract to support initializer functions. To use it, replace\nthe constructor with a function that has the `initializer` modifier.\nWARNING: Unlike constructors, initializer functions must be manually\ninvoked. This applies both to deploying an Initializable contract, as well\nas extending an Initializable contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\na parent initializer twice, or ensure that all initializers are idempotent,\nbecause this is not dealt with automatically as with constructors."
							},
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 117,
									"src": "777:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 48,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "777:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 117,
									"src": "901:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 50,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "901:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1040:327:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 55,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1055:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 56,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 112,
																		"src": "1071:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1071:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1055:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1090:12:1",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 59,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1091:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1055:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1104:48:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1047:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1047:106:1"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 89,
														"src": "1162:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 65,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1184:13:1",
													"subExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1185:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1162:35:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 70,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 66,
													"src": "1208:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 80,
												"nodeType": "IfStatement",
												"src": "1204:83:1",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "1224:63:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1248:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1233:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "1233:19:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 75,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1261:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1275:4:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1261:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 78,
															"nodeType": "ExpressionStatement",
															"src": "1261:18:1"
														}
													]
												}
											},
											{
												"id": 81,
												"nodeType": "PlaceholderStatement",
												"src": "1295:1:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 82,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 66,
													"src": "1309:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 88,
												"nodeType": "IfStatement",
												"src": "1305:57:1",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "1325:37:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 83,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "1334:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1349:5:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1334:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 86,
															"nodeType": "ExpressionStatement",
															"src": "1334:20:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "933:80:1",
										"text": "@dev Modifier to use in the initializer function of a contract."
									},
									"id": 90,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:2:1"
									},
									"src": "1017:350:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1509:455:1",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "self",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 111,
														"src": "1850:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 96,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1850:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 100,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "1873:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$117",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$117",
																"typeString": "contract Initializable"
															}
														],
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1865:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 98,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1865:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1865:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1850:28:1"
											},
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"mutability": "mutable",
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 111,
														"src": "1885:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1885:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1885:10:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1911:27:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1913:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "1931:4:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1919:11:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:17:1"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "1913:2:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 104,
														"isOffset": false,
														"isSlot": false,
														"src": "1913:2:1",
														"valueSize": 1
													},
													{
														"declaration": 97,
														"isOffset": false,
														"isSlot": false,
														"src": "1931:4:1",
														"valueSize": 1
													}
												],
												"id": 106,
												"nodeType": "InlineAssembly",
												"src": "1902:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1951:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 95,
												"id": 110,
												"nodeType": "Return",
												"src": "1944:14:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1373:79:1",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1478:2:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 112,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 117,
									"src": "1456:508:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 117,
									"src": "2042:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 113,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2042:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 115,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 114,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2050:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "2042:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 118,
							"src": "672:1403:1"
						}
					],
					"src": "0:2075:1"
				},
				"id": 1
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"OwnableUpgradeSafe": [
							247
						]
					},
					"id": 248,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 120,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 45,
							"src": "27:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 121,
							"nodeType": "ImportDirective",
							"scope": 248,
							"sourceUnit": 118,
							"src": "52:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 123,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "623:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$117",
											"typeString": "contract Initializable"
										}
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "623:13:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 125,
										"name": "ContextUpgradeSafe",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 44,
										"src": "638:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ContextUpgradeSafe_$44",
											"typeString": "contract ContextUpgradeSafe"
										}
									},
									"id": 126,
									"nodeType": "InheritanceSpecifier",
									"src": "638:18:2"
								}
							],
							"contractDependencies": [
								44,
								117
							],
							"contractKind": "contract",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "85:505:2",
								"text": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner."
							},
							"fullyImplemented": true,
							"id": 247,
							"linearizedBaseContracts": [
								247,
								44,
								117
							],
							"name": "OwnableUpgradeSafe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 247,
									"src": "664:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 127,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 134,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "722:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "753:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "721:57:2"
									},
									"src": "695:84:2"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "935:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 140,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "946:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "946:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 143,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "983:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "983:26:2"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "787:93:2",
										"text": "@dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 138,
											"modifierName": {
												"argumentTypes": null,
												"id": 137,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "923:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "923:11:2"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:2"
									},
									"scope": 247,
									"src": "888:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1082:139:2",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 169,
														"src": "1093:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1093:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1113:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1113:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:32:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 157,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1136:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 158,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1145:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1136:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1136:18:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1191:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 162,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1191:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1191:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 166,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1203:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1170:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "EmitStatement",
												"src": "1165:48:2"
											}
										]
									},
									"documentation": null,
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 150,
											"modifierName": {
												"argumentTypes": null,
												"id": 149,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 90,
												"src": "1070:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1070:11:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:2"
									},
									"scope": 247,
									"src": "1025:196:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1349:32:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 176,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "1367:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "1360:13:2"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1229:67:2",
										"text": "@dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1340:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1339:9:2"
									},
									"scope": 247,
									"src": "1302:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1495:98:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1514:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1524:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1524:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1514:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1538:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1506:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1506:67:2"
											},
											{
												"id": 190,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:2"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1389:79:2",
										"text": "@dev Throws if called by any account other than the owner."
									},
									"id": 192,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1492:2:2"
									},
									"src": "1474:119:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1998:94:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2035:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2051:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2043:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 200,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2043:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2043:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 198,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2014:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2014:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "EmitStatement",
												"src": "2009:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 206,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2065:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2082:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2074:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 207,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2074:7:2",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2074:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2065:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2065:19:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1601:337:2",
										"text": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 196,
											"modifierName": {
												"argumentTypes": null,
												"id": 195,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 192,
												"src": "1988:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1988:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:2"
									},
									"scope": 247,
									"src": "1944:148:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2317:174:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 223,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2356:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2348:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 224,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2348:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2348:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2336:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2360:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2328:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2328:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2328:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 233,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2438:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 234,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2446:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2417:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2417:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "2412:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 237,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2466:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 238,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2475:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2466:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2466:17:2"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "2100:141:2",
										"text": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 220,
											"modifierName": {
												"argumentTypes": null,
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 192,
												"src": "2307:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2307:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 242,
												"src": "2274:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2273:18:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2317:0:2"
									},
									"scope": 247,
									"src": "2247:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 247,
									"src": "2499:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 243,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2499:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 245,
										"length": {
											"argumentTypes": null,
											"hexValue": "3439",
											"id": 244,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2507:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2499:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 248,
							"src": "592:1936:2"
						}
					],
					"src": "0:2530:2"
				},
				"id": 2
			}
		}
	}
}