{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					}
				],
				"name": "acceptDebt",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addStrats",
						"type": "address"
					}
				],
				"name": "approvedAddStrategies",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFairLaunchAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "floating",
						"type": "uint256"
					}
				],
				"name": "getInterestRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getKillBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getKillTreasuryBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReservePoolBps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTreasuryAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWNativeRelayer",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWrappedNativeAddr",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					}
				],
				"name": "isWorker",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					}
				],
				"name": "isWorkerReserveConsistent",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					}
				],
				"name": "isWorkerStable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					}
				],
				"name": "killFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "positionOwner",
						"type": "address"
					}
				],
				"name": "killFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minDebtSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "positionOwner",
						"type": "address"
					}
				],
				"name": "rawKillFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					}
				],
				"name": "rawKillFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "whitelistedCallers",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "caller",
						"type": "address"
					}
				],
				"name": "whitelistedLiquidators",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "positionOwner",
						"type": "address"
					}
				],
				"name": "workFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "worker",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "debt",
						"type": "uint256"
					}
				],
				"name": "workFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"acceptDebt(address)": {
					"details": "Return whether the given worker accepts more debt. Revert on non-worker."
				},
				"approvedAddStrategies(address)": {
					"details": "Return if the given strategy is approved."
				},
				"getFairLaunchAddr()": {
					"details": "Return the address of fair launch contract."
				},
				"getInterestRate(uint256,uint256)": {
					"details": "Return the interest rate per second, using 1e18 as denom."
				},
				"getKillBps()": {
					"details": "Return the bps rate for Avada Kill caster."
				},
				"getKillTreasuryBps()": {
					"details": "Return the portion of reward that will be transferred to treasury account after successfully killing a position."
				},
				"getReservePoolBps()": {
					"details": "Return the bps rate for reserve pool."
				},
				"getTreasuryAddr()": {
					"details": "Return the address of treasury account"
				},
				"getWNativeRelayer()": {
					"details": "Return the address of wNative relayer."
				},
				"getWrappedNativeAddr()": {
					"details": "Return the address of wrapped native token."
				},
				"isWorker(address)": {
					"details": "Return whether the given address is a worker."
				},
				"isWorkerReserveConsistent(address)": {
					"details": "Return if reserve that worker is working with is consistent"
				},
				"isWorkerStable(address)": {
					"details": "Return if worker is stable"
				},
				"killFactor(address,uint256)": {
					"details": "Return the kill factor for the worker + BaseToken debt, using 1e4 as denom. Revert on non-worker."
				},
				"killFactor(address,uint256,address)": {
					"details": "Return the kill factor for the worker + BaseToken debt, using 1e4 as denom. Revert on non-worker. Also check for boosted kill factor from NFT staking"
				},
				"minDebtSize()": {
					"details": "Return minimum BaseToken debt size per position."
				},
				"rawKillFactor(address,uint256)": {
					"details": "Return the kill factor for the worker + BaseToken debt without checking isStable, using 1e4 as denom. Revert on non-worker."
				},
				"rawKillFactor(address,uint256,address)": {
					"details": "Return the kill factor for the worker + BaseToken debt without checking isStable, using 1e4 as denom. Revert on non-worker. Also check for boosted kill factor from NFT staking"
				},
				"whitelistedCallers(address)": {
					"details": "Return if the caller is whitelisted."
				},
				"whitelistedLiquidators(address)": {
					"details": "Return if the caller is whitelisted."
				},
				"workFactor(address,uint256)": {
					"details": "Return the work factor for the worker + BaseToken debt, using 1e4 as denom. Revert on non-worker."
				},
				"workFactor(address,uint256,address)": {
					"details": "Return the work factor for the worker + debt, using 1e4 as denom. Revert on non-worker. Also check for boosted leverage from NFT staking"
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IVaultConfig.sol": "IVaultConfig"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IVaultConfig.sol": {
			"keccak256": "0x68bcfdeb4e05c1a03df3c5f4326a76a85fd6dedec579a8ab7abce03ab527b1c4",
			"urls": [
				"bzz-raw://ab27002dca0c13f20216afc505c72819830c51d9e6b5b10dcaeab2a8770dee98",
				"dweb:/ipfs/QmNjFaQDtKKgw1oPmhfBMUcpQYjaxBRr19JZUkxsgtjqdM"
			]
		}
	},
	"version": 1
}