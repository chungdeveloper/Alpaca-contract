{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Ownable.sol": "OwnableUpgradeSafe"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Context.sol": {
			"keccak256": "0xea42d2e25ad51ffa0cd6ed950818aa8144f1260d2491ca5139a1e07469af65a3",
			"urls": [
				"bzz-raw://6b77019544065ff2f4ed46a94ea3decdc6101e526c2f7f2f03f3a20eda60edcb",
				"dweb:/ipfs/QmThtEStRy6TqTRkJiU2hyTLxHs5y1SCuRSXs3tkrpkYxw"
			]
		},
		"contracts/Initializable.sol": {
			"keccak256": "0x62188c77f79483af23e66038f5dce8496001dbd63017dc2c41d8a9bb801133f0",
			"urls": [
				"bzz-raw://8fba6162c8efb1f9361b5274809d5440191e9800e9aea5e1cb43ef0f9d14d8c1",
				"dweb:/ipfs/Qmb8d192osS5hwkxTZEZcTmhGJxPbHFa8EZxVJxAsjWkEN"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0x5355dd549c496865f18357e6171e7c028dd5b9efd5d01ebf57d65997e54d509b",
			"urls": [
				"bzz-raw://5a82c67f784e3fc2feeb419ab7409a7018ec3bbb47d33000cbf392ac4174dac7",
				"dweb:/ipfs/QmTnqFSguVUu9DFhTR9VtS7E9961E2WEm2u5YZLfuNuEX2"
			]
		}
	},
	"version": 1
}